{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/okhrimenkovladyslav/Desktop/IT/VladylenCourseReactJs/ReactPracticeSix/src/containers/QuizCreator/QuizCreator.js\";\nimport React, { Component } from 'react';\nimport classes from './QuizCreator.module.css';\nimport Button from \"../../components/UI/Button/Button\";\nimport { createControl, validate, validateForm } from '../../form/formFramework';\nimport Input from \"../../components/UI/Input/Input\";\nimport Auxiliary from \"../../hoc/Auxiliary/Auxiliary\";\nimport Select from \"../../components/UI/Select/Select\"; // Сокращение дублирование кода функции createControl() для state.formControls.option\n\nfunction createOptionControl(number) {\n  return createControl({\n    label: `Вариант ${number}`,\n    errorMessage: 'Значение не может быть пустым',\n    id: number\n  }, {\n    required: true\n  });\n}\n\nfunction createFormControls() {\n  return {\n    question: createControl({\n      label: 'Введите вопрос',\n      errorMessage: 'Вопрос не может быть пустым'\n    }, {\n      required: true\n    }),\n    option1: createOptionControl(1),\n    option2: createOptionControl(2),\n    option3: createOptionControl(3),\n    option4: createOptionControl(4)\n  };\n}\n\nexport default class QuizCreator extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      quiz: [],\n      isFormValid: false,\n      rightAnswerId: 1,\n      formControls: createFormControls()\n    };\n\n    this.submitHandler = event => event.preventDefault();\n\n    this.addQuestionHandler = event => {\n      event.preventDefault(); // копирование массива без опасение мутации\n\n      const quiz = this.state.quiz.concat();\n      const index = quiz.length + 1; // Создание ярлыков для сокращение записей в последующем\n\n      const {\n        question,\n        option1,\n        option2,\n        option3,\n        option4\n      } = this.state.formControls;\n      const questionItem = {\n        question: question.value,\n        id: index,\n        rightAnswerId: this.state.rightAnswerId,\n        answers: [{\n          text: option1.value,\n          id: option1.id\n        }]\n      };\n    };\n\n    this.createQuizHandler = () => {};\n\n    this.changeHandler = (value, controlName) => {\n      const formControls = { ...this.state.formControls\n      };\n      const control = { ...formControls[controlName]\n      };\n      control.touch = true;\n      control.value = value;\n      control.valid = validate(control.value, control.validation);\n      formControls[controlName] = control;\n      this.setState({\n        formControls,\n        isFormValid: validateForm(formControls)\n      });\n    };\n\n    this.selectChangeHandler = event => {\n      this.setState({\n        // + перед event - переводит в числовой формат number\n        rightAnswerId: +event.target.value\n      });\n    };\n  }\n\n  renderControls() {\n    return Object.keys(this.state.formControls).map((controlName, index) => {\n      const control = this.state.formControls[controlName];\n      return /*#__PURE__*/_jsxDEV(Auxiliary, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          label: control.label,\n          value: control.value,\n          valid: control.valid,\n          shouldValidate: !!control.validation,\n          touched: control.touched,\n          errorMessage: control.errorMessage,\n          onChange: event => this.changeHandler(event.target.value, controlName)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), index === 0 ? /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 36\n        }, this) : null]\n      }, controlName + index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  render() {\n    const select = /*#__PURE__*/_jsxDEV(Select, {\n      label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0435\\u0442\\u0435 \\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u044B\\u0439 \\u043E\\u0442\\u0432\\u0435\\u0442\",\n      value: this.state.rightAnswerId,\n      onChange: this.selectChangeHandler,\n      options: [{\n        text: 1,\n        value: 1\n      }, {\n        text: 2,\n        value: 2\n      }, {\n        text: 3,\n        value: 3\n      }, {\n        text: 4,\n        value: 4\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 24\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.QuizCreator,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u0435 \\u0442\\u0435\\u0441\\u0442\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.submitHandler,\n          children: [this.renderControls(), select, /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: this.addQuestionHandler,\n            disabled: !this.state.isFormValid,\n            children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"success\",\n            onClick: this.createQuizHandler,\n            disabled: this.state.quiz.length === 0,\n            children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0442\\u0435\\u0441\\u0442\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/okhrimenkovladyslav/Desktop/IT/VladylenCourseReactJs/ReactPracticeSix/src/containers/QuizCreator/QuizCreator.js"],"names":["React","Component","classes","Button","createControl","validate","validateForm","Input","Auxiliary","Select","createOptionControl","number","label","errorMessage","id","required","createFormControls","question","option1","option2","option3","option4","QuizCreator","state","quiz","isFormValid","rightAnswerId","formControls","submitHandler","event","preventDefault","addQuestionHandler","concat","index","length","questionItem","value","answers","text","createQuizHandler","changeHandler","controlName","control","touch","valid","validation","setState","selectChangeHandler","target","renderControls","Object","keys","map","touched","render","select"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport classes from './QuizCreator.module.css'\nimport Button from \"../../components/UI/Button/Button\";\nimport {createControl, validate, validateForm} from '../../form/formFramework'\nimport Input from \"../../components/UI/Input/Input\";\nimport Auxiliary from \"../../hoc/Auxiliary/Auxiliary\";\nimport Select from \"../../components/UI/Select/Select\";\n\n// Сокращение дублирование кода функции createControl() для state.formControls.option\nfunction createOptionControl(number) {\n    return createControl({\n        label: `Вариант ${number}`,\n        errorMessage: 'Значение не может быть пустым',\n        id: number\n    }, {required: true})\n}\n\nfunction createFormControls() {\n    return {\n        question: createControl({\n            label: 'Введите вопрос',\n            errorMessage: 'Вопрос не может быть пустым'\n        }, {required: true}),\n        option1: createOptionControl(1),\n        option2: createOptionControl(2),\n        option3: createOptionControl(3),\n        option4: createOptionControl(4)\n    }\n}\n\nexport default class QuizCreator extends Component {\n\n    state = {\n        quiz: [],\n        isFormValid: false,\n        rightAnswerId: 1,\n        formControls: createFormControls()\n    }\n\n    submitHandler = (event) => event.preventDefault()\n\n    addQuestionHandler = event => {\n        event.preventDefault()\n\n        // копирование массива без опасение мутации\n        const quiz = this.state.quiz.concat()\n        const index = quiz.length + 1\n\n        // Создание ярлыков для сокращение записей в последующем\n        const {question, option1, option2, option3, option4} = this.state.formControls\n\n        const questionItem = {\n            question: question.value,\n            id: index,\n            rightAnswerId: this.state.rightAnswerId,\n            answers: [\n                {text: option1.value, id: option1.id }\n            ]\n        }\n    }\n\n    createQuizHandler = () => {\n\n    }\n\n    changeHandler = (value, controlName) => {\n        const formControls = {...this.state.formControls}\n        const control = {...formControls[controlName]}\n\n        control.touch = true\n        control.value = value\n        control.valid = validate(control.value, control.validation)\n\n        formControls[controlName] = control\n\n        this.setState({\n            formControls,\n            isFormValid: validateForm(formControls)\n        })\n    }\n\n    renderControls() {\n        return Object.keys(this.state.formControls).map((controlName, index) => {\n            const control = this.state.formControls[controlName]\n            return (\n                <Auxiliary key={controlName + index}>\n                    <Input\n                        label={control.label}\n                        value={control.value}\n                        valid={control.valid}\n                        shouldValidate={!!control.validation}\n                        touched={control.touched}\n                        errorMessage={control.errorMessage}\n                        onChange={event => this.changeHandler(event.target.value, controlName)}\n                    />\n                    {index === 0 ? <hr/> : null}\n                </Auxiliary>\n            )\n        })\n    }\n\n    selectChangeHandler = event => {\n        this.setState({\n            // + перед event - переводит в числовой формат number\n            rightAnswerId: +event.target.value\n        })\n    }\n\n    render() {\n        const select = <Select\n            label='Выберете правильный ответ'\n            value={this.state.rightAnswerId}\n            onChange={this.selectChangeHandler}\n            options={[\n                {text: 1, value: 1},\n                {text: 2, value: 2},\n                {text: 3, value: 3},\n                {text: 4, value: 4},\n            ]}\n        />\n\n        return (\n            <div className={classes.QuizCreator}>\n                <div>\n                    <h1>Создание теста</h1>\n                    <form onSubmit={this.submitHandler}>\n\n                        {this.renderControls()}\n\n                        {select}\n\n                        <Button\n                            type='primary'\n                            onClick={this.addQuestionHandler}\n                            disabled={!this.state.isFormValid}\n                        >Добавить вопрос</Button>\n                        <Button\n                            type='success'\n                            onClick={this.createQuizHandler}\n                            disabled={this.state.quiz.length === 0}\n                        >Создать тест</Button>\n\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}