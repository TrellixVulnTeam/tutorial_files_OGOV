{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/okhrimenkovladyslav/Desktop/IT/VladylenCourseReactJs/ReactPracticeSix/src/containers/Auth/Auth.js\";\nimport React, { Component } from 'react';\nimport classes from './Auth.module.css';\nimport Button from \"../../components/UI/Button/Button\";\nimport Input from \"../../components/UI/Input/Input\";\n\nfunction validateEmail(email) {\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}\n\nexport default class Auth extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isFormValid: false,\n      formControls: {\n        email: {\n          value: '',\n          type: 'email',\n          label: 'Email',\n          errorMessage: 'Введите коректный email',\n          valid: false,\n          touched: false,\n          validation: {\n            required: true,\n            email: true\n          }\n        },\n        password: {\n          value: '',\n          type: 'password',\n          label: 'Password',\n          errorMessage: 'Пароль должен быть не менее 6 символов',\n          valid: false,\n          touched: false,\n          validation: {\n            required: true,\n            minLength: 6\n          }\n        }\n      }\n    };\n\n    this.loginHandler = () => {};\n\n    this.registerHandler = () => {};\n\n    this.submitHandler = event => {\n      event.preventDefault();\n    };\n\n    this.onChangeHandler = (event, controlName) => {\n      const formControls = { ...this.state.formControls\n      };\n      const control = { ...formControls[controlName]\n      };\n      control.value = event.target.value;\n      control.touched = true;\n      control.valid = this.validateControl(control.value, control.validation);\n      formControls[controlName] = control;\n      let isFormValid = true;\n      Object.keys(formControls).forEach(name => {\n        isFormValid = formControls[name].valid && isFormValid;\n      });\n      this.setState({\n        formControls,\n        isFormValid\n      });\n    };\n  }\n\n  validateControl(value, validation) {\n    if (!validation) return true;\n    let isValid = true;\n    if (validation.required) isValid = value.trim() !== '' && isValid;\n    if (validation.email) isValid = validateEmail(value) && isValid;\n    if (validation.minLength) isValid = value.trim().length >= validation.minLength && isValid;\n    return isValid;\n  }\n\n  renderInputs() {\n    return Object.keys(this.state.formControls).map((controlName, index) => {\n      const control = this.state.formControls[controlName];\n      return /*#__PURE__*/_jsxDEV(Input, {\n        type: control.type,\n        value: control.value,\n        valid: control.valid,\n        touched: control.touched,\n        label: control.label,\n        shouldValidate: !!control.validation,\n        errorMessage: control.errorMessage,\n        onChange: event => {\n          this.onChangeHandler(event, controlName);\n        }\n      }, controlName + index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Auth,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.submitHandler,\n          className: classes.AuthForm,\n          children: [this.renderInputs(), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"success\",\n            onClick: this.loginHandler,\n            disabled: !this.state.isFormValid,\n            children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: this.registerHandler,\n            children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u0441\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/okhrimenkovladyslav/Desktop/IT/VladylenCourseReactJs/ReactPracticeSix/src/containers/Auth/Auth.js"],"names":["React","Component","classes","Button","Input","validateEmail","email","re","test","String","toLowerCase","Auth","state","isFormValid","formControls","value","type","label","errorMessage","valid","touched","validation","required","password","minLength","loginHandler","registerHandler","submitHandler","event","preventDefault","onChangeHandler","controlName","control","target","validateControl","Object","keys","forEach","name","setState","isValid","trim","length","renderInputs","map","index","render","AuthForm"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport classes from './Auth.module.css'\nimport Button from \"../../components/UI/Button/Button\";\nimport Input from \"../../components/UI/Input/Input\";\n\nfunction validateEmail(email) {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\n\nexport default class Auth extends Component {\n\n    state = {\n        isFormValid: false,\n        formControls: {\n            email: {\n                value: '',\n                type: 'email',\n                label: 'Email',\n                errorMessage: 'Введите коректный email',\n                valid: false,\n                touched: false,\n                validation: {\n                    required: true,\n                    email: true\n                }\n            },\n            password: {\n                value: '',\n                type: 'password',\n                label: 'Password',\n                errorMessage: 'Пароль должен быть не менее 6 символов',\n                valid: false,\n                touched: false,\n                validation: {\n                    required: true,\n                    minLength: 6\n                }\n            }\n        }\n    }\n\n    loginHandler = () => {\n\n    }\n\n    registerHandler = () => {\n\n    }\n\n    // отменяет ненужное поведение формы\n    submitHandler = event => {\n        event.preventDefault()\n    }\n\n    validateControl(value, validation) {\n        if (!validation) return true\n\n        let isValid = true\n\n        if (validation.required) isValid = value.trim() !== '' && isValid\n\n        if (validation.email) isValid = validateEmail(value) && isValid\n\n        if (validation.minLength) isValid = value.trim().length >= validation.minLength && isValid\n\n        return isValid\n    }\n\n    onChangeHandler = (event, controlName) => {\n\n        const formControls = {...this.state.formControls}\n        const control = {...formControls[controlName]}\n\n        control.value = event.target.value\n        control.touched = true\n        control.valid = this.validateControl(control.value, control.validation)\n\n        formControls[controlName] = control\n\n        let isFormValid = true\n        Object.keys(formControls).forEach(name => {\n            isFormValid = formControls[name].valid && isFormValid\n        })\n\n        this.setState({\n            formControls, isFormValid\n        })\n    }\n\n    renderInputs() {\n        return Object.keys(this.state.formControls).map((controlName, index) => {\n            const control = this.state.formControls[controlName]\n            return (\n                <Input\n                    key={controlName + index}\n                    type={control.type}\n                    value={control.value}\n                    valid={control.valid}\n                    touched={control.touched}\n                    label={control.label}\n                    shouldValidate={!!control.validation}\n                    errorMessage={control.errorMessage}\n                    onChange={event => {\n                        this.onChangeHandler(event, controlName)\n                    }}\n                />\n            )\n        })\n    }\n\n    render() {\n        return (\n            <div className={classes.Auth}>\n                <div>\n                    <h1>\n                        Авторизация\n                    </h1>\n\n                    <form onSubmit={this.submitHandler} className={classes.AuthForm}>\n\n                        {this.renderInputs()}\n\n                        <Button\n                            type='success'\n                            onClick={this.loginHandler}\n                            disabled={!this.state.isFormValid}\n                        >Войти\n                        </Button>\n\n                        <Button\n                            type='primary'\n                            onClick={this.registerHandler}\n                        >Зарегистрироватся\n                        </Button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}