{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/okhrimenkovladyslav/Desktop/IT/VladylenCourseReactJs/ReactPracticeSix/src/containers/QuizCreator/QuizCreator.js\";\nimport React, { Component } from 'react';\nimport classes from './QuizCreator.module.css';\nimport Button from \"../../components/UI/Button/Button\";\nimport { createControl } from '../../form/formFramework';\nimport Input from \"../../components/UI/Input/Input\";\nimport Auxiliary from \"../../hoc/Auxiliary/Auxiliary\";\nimport Select from \"../../components/UI/Select/Select\"; // Сокращение дублирование кода функции createControl() для state.formControls.option\n\nfunction createOptionControl(number) {\n  return createControl({\n    label: `Вариант ${number}`,\n    errorMessage: 'Значение не может быть пустым',\n    id: number\n  }, {\n    required: true\n  });\n}\n\nfunction createFormControls() {\n  return {\n    question: createControl({\n      label: 'Введите вопрос',\n      errorMessage: 'Вопрос не может быть пустым'\n    }, {\n      required: true\n    }),\n    option1: createOptionControl(1),\n    option2: createOptionControl(2),\n    option3: createOptionControl(3),\n    option4: createOptionControl(4)\n  };\n}\n\nexport default class QuizCreator extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      quiz: [],\n      formControls: createFormControls(),\n      rightAnswerId: 1\n    };\n\n    this.submitHandler = event => event.preventDefault();\n\n    this.addQuestionHandler = () => {};\n\n    this.createQuizHandler = () => {};\n\n    this.changeHandler = (value, controlName) => {};\n\n    this.selectChangeHandler = event => {};\n  }\n\n  renderControls() {\n    return Object.keys(this.state.formControls).map((controlName, index) => {\n      const control = this.state.formControls[controlName];\n      return /*#__PURE__*/_jsxDEV(Auxiliary, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          label: control.label,\n          value: control.value,\n          valid: control.valid,\n          shouldValidate: !!control.validation,\n          touched: control.touched,\n          errorMessage: control.errorMessage,\n          onChange: event => this.changeHandler(event.target.value, controlName)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), index === 0 ? /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 36\n        }, this) : null]\n      }, controlName + index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  render() {\n    const select = /*#__PURE__*/_jsxDEV(Select, {\n      label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0435\\u0442\\u0435 \\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u044B\\u0439 \\u043E\\u0442\\u0432\\u0435\\u0442\",\n      value: this.state.rightAnswerId,\n      onChange: this.selectChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 24\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.QuizCreator,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"QuizCreator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.submitHandler,\n          children: [this.renderControls(), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: this.addQuestionHandler,\n            children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"success\",\n            onClick: this.createQuizHandler,\n            children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/okhrimenkovladyslav/Desktop/IT/VladylenCourseReactJs/ReactPracticeSix/src/containers/QuizCreator/QuizCreator.js"],"names":["React","Component","classes","Button","createControl","Input","Auxiliary","Select","createOptionControl","number","label","errorMessage","id","required","createFormControls","question","option1","option2","option3","option4","QuizCreator","state","quiz","formControls","rightAnswerId","submitHandler","event","preventDefault","addQuestionHandler","createQuizHandler","changeHandler","value","controlName","selectChangeHandler","renderControls","Object","keys","map","index","control","valid","validation","touched","target","render","select"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport classes from './QuizCreator.module.css'\nimport Button from \"../../components/UI/Button/Button\";\nimport {createControl} from '../../form/formFramework'\nimport Input from \"../../components/UI/Input/Input\";\nimport Auxiliary from \"../../hoc/Auxiliary/Auxiliary\";\nimport Select from \"../../components/UI/Select/Select\";\n\n// Сокращение дублирование кода функции createControl() для state.formControls.option\nfunction createOptionControl(number) {\n    return createControl({\n        label: `Вариант ${number}`,\n        errorMessage: 'Значение не может быть пустым',\n        id: number\n    }, {required: true})\n}\n\nfunction createFormControls() {\n    return {\n        question: createControl({\n            label: 'Введите вопрос',\n            errorMessage: 'Вопрос не может быть пустым'\n        }, {required: true}),\n        option1: createOptionControl(1),\n        option2: createOptionControl(2),\n        option3: createOptionControl(3),\n        option4: createOptionControl(4)\n    }\n}\n\nexport default class QuizCreator extends Component {\n\n    state = {\n        quiz: [],\n        formControls: createFormControls(),\n        rightAnswerId: 1\n    }\n\n    submitHandler = (event) => event.preventDefault()\n\n    addQuestionHandler = () => {\n    }\n\n    createQuizHandler = () => {\n\n    }\n\n    changeHandler = (value, controlName) => {\n\n    }\n\n    renderControls() {\n        return Object.keys(this.state.formControls).map((controlName, index) => {\n            const control = this.state.formControls[controlName]\n            return (\n                <Auxiliary key={controlName + index}>\n                    <Input\n                        label={control.label}\n                        value={control.value}\n                        valid={control.valid}\n                        shouldValidate={!!control.validation}\n                        touched={control.touched}\n                        errorMessage={control.errorMessage}\n                        onChange={event => this.changeHandler(event.target.value, controlName)}\n                    />\n                    {index === 0 ? <hr/> : null}\n                </Auxiliary>\n            )\n        })\n    }\n\n    selectChangeHandler = event => {\n        \n    }\n\n    render() {\n        const select = <Select\n            label='Выберете правильный ответ'\n            value={this.state.rightAnswerId}\n            onChange={this.selectChangeHandler}\n        />\n\n        return (\n            <div className={classes.QuizCreator}>\n                <div>\n                    <h1>QuizCreator</h1>\n                    <form onSubmit={this.submitHandler}>\n\n                        {this.renderControls()}\n\n\n\n                        <Button type='primary' onClick={this.addQuestionHandler}>Добавить вопрос</Button>\n                        <Button type='success' onClick={this.createQuizHandler}>Добавить вопрос</Button>\n\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}