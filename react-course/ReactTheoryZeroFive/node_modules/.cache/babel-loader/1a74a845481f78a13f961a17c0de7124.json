{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/okhrimenkovladyslav/Desktop/IT/Testing/react-theory/src/Counter/Counter.js\";\nimport React, { Component } from 'react';\nimport Auxiliary from \"../hoc/Auxiliary\";\nexport default class Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counter: 0\n    };\n\n    this.addCounter = () => {\n      /*\n      this.setState({\n      counter: this.state.counter + 1\n      })\n      */\n      this.setState(prevState => {\n        return {\n          counter: prevState.counter + 1\n        };\n      });\n    };\n\n    this.minCounter = () => {\n      this.setState(prevState => {\n        return {\n          counter: prevState.counter - 1\n        };\n      });\n    };\n  }\n\n  // Использование Псевдо-компонента вручную созданым для невидимой обертки элементов.\n  render() {\n    return /*#__PURE__*/_jsxDEV(Auxiliary, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Counter \", this.state.counter]\n      }, '1', true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.addCounter,\n        children: \"+\"\n      }, '2', false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.minCounter,\n        children: \"-\"\n      }, '3', false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  } // использование зарезервированого название реактом <React.Flagment />\n\n  /* return (\n       <React.Fragment>\n           <h1 key='1'>Counter {this.state.counter}</h1>\n           <button key='2' onClick={this.addCounter}>+</button>\n           <button key='3' onClick={this.minCounter}>-</button>\n       </React.Fragment>\n   )*/\n  // Использование без блокового режима с помощью складывание элементов отрисовки JSX в масив\n\n  /*\n  return [\n          <h1 key='1'>Counter {this.state.counter}</h1>,\n          <button key='2' onClick={this.addCounter}>+</button>,\n          <button key='3'onClick={this.minCounter}>-</button>\n  ]\n  */\n\n\n}","map":{"version":3,"sources":["/Users/okhrimenkovladyslav/Desktop/IT/Testing/react-theory/src/Counter/Counter.js"],"names":["React","Component","Auxiliary","Counter","state","counter","addCounter","setState","prevState","minCounter","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AAEA,eAAe,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC3CG,KAD2C,GACnC;AACJC,MAAAA,OAAO,EAAE;AADL,KADmC;;AAAA,SAK3CC,UAL2C,GAK9B,MAAM;AACf;AACR;AACA;AACA;AACA;AAEQ,WAAKC,QAAL,CAAeC,SAAD,IAAe;AACzB,eAAO;AACHH,UAAAA,OAAO,EAAEG,SAAS,CAACH,OAAV,GAAoB;AAD1B,SAAP;AAGH,OAJD;AAKH,KAjB0C;;AAAA,SAmB3CI,UAnB2C,GAmB9B,MAAM;AACf,WAAKF,QAAL,CAAeC,SAAD,IAAe;AACzB,eAAO;AACHH,UAAAA,OAAO,EAAEG,SAAS,CAACH,OAAV,GAAoB;AAD1B,SAAP;AAGH,OAJD;AAKH,KAzB0C;AAAA;;AA2B/C;AACIK,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,SAAD;AAAA,8BACI;AAAA,+BAAqB,KAAKN,KAAL,CAAWC,OAAhC;AAAA,SAAQ,GAAR;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAgB,QAAA,OAAO,EAAE,KAAKC,UAA9B;AAAA;AAAA,SAAY,GAAZ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAgB,QAAA,OAAO,EAAE,KAAKG,UAA9B;AAAA;AAAA,SAAY,GAAZ;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH,GApC0C,CAsC/C;;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AAEA;;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;;;AAtD+C","sourcesContent":["import React, {Component} from 'react'\nimport Auxiliary from \"../hoc/Auxiliary\";\n\nexport default class Counter extends Component {\n    state = {\n        counter: 0\n    }\n\n    addCounter = () => {\n        /*\n        this.setState({\n        counter: this.state.counter + 1\n        })\n        */\n\n        this.setState((prevState) => {\n            return {\n                counter: prevState.counter + 1\n            }\n        })\n    }\n\n    minCounter = () => {\n        this.setState((prevState) => {\n            return {\n                counter: prevState.counter - 1\n            }\n        })\n    }\n\n// Использование Псевдо-компонента вручную созданым для невидимой обертки элементов.\n    render() {\n        return (\n            <Auxiliary>\n                <h1 key='1'>Counter {this.state.counter}</h1>\n                <button key='2' onClick={this.addCounter}>+</button>\n                <button key='3' onClick={this.minCounter}>-</button>\n            </Auxiliary>\n        )\n    }\n\n// использование зарезервированого название реактом <React.Flagment />\n    /* return (\n         <React.Fragment>\n             <h1 key='1'>Counter {this.state.counter}</h1>\n             <button key='2' onClick={this.addCounter}>+</button>\n             <button key='3' onClick={this.minCounter}>-</button>\n         </React.Fragment>\n     )*/\n\n// Использование без блокового режима с помощью складывание элементов отрисовки JSX в масив\n    /*\n    return [\n            <h1 key='1'>Counter {this.state.counter}</h1>,\n            <button key='2' onClick={this.addCounter}>+</button>,\n            <button key='3'onClick={this.minCounter}>-</button>\n    ]\n    */\n}"]},"metadata":{},"sourceType":"module"}