{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/okhrimenkovladyslav/Desktop/IT/VladylenCourseReactJs/ReactTheoryZeroFive/src/ErrorBoundary/ErrorBoundary.js\";\nimport React from 'react';\nexport default class ErrorBoundary extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // state.hasError - Наличие ошибки в компоненте (Car)\n      hasError: false\n    };\n  }\n\n  // Ф-ция при наличии Error в компоненте Car меняет state.hasError на true\n\n  /* componentDidCatch(error, info) {\n      this.setState({hasError: true})\n  }*/\n  render() {\n    if (this.state.hasError) {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: 'red'\n        },\n        children: \"This block do not work now and Something went wrong\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this);\n    }\n\n    return this.props.children;\n  }\n\n}","map":{"version":3,"sources":["/Users/okhrimenkovladyslav/Desktop/IT/VladylenCourseReactJs/ReactTheoryZeroFive/src/ErrorBoundary/ErrorBoundary.js"],"names":["React","ErrorBoundary","Component","state","hasError","render","color","props","children"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA4C;AAAA;AAAA;AAAA,SAEvDC,KAFuD,GAE/C;AACJ;AACAC,MAAAA,QAAQ,EAAE;AAFN,KAF+C;AAAA;;AAOvD;;AACA;AACJ;AACA;AAEIC,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKF,KAAL,CAAWC,QAAf,EAAyB;AACrB,0BACI;AACI,QAAA,KAAK,EAAE;AAACE,UAAAA,KAAK,EAAE;AAAR,SADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH;;AAED,WAAO,KAAKC,KAAL,CAAWC,QAAlB;AACH;;AAtBsD","sourcesContent":["import React from 'react'\n\nexport default class ErrorBoundary extends React.Component {\n\n    state = {\n        // state.hasError - Наличие ошибки в компоненте (Car)\n        hasError: false\n    }\n\n    // Ф-ция при наличии Error в компоненте Car меняет state.hasError на true\n    /* componentDidCatch(error, info) {\n        this.setState({hasError: true})\n    }*/\n\n    render() {\n        if (this.state.hasError) {\n            return (\n                <h1\n                    style={{color: 'red'}}\n                >This block do not work now and Something went wrong\n                </h1>)\n        }\n\n        return this.props.children\n    }\n\n}\n\n"]},"metadata":{},"sourceType":"module"}