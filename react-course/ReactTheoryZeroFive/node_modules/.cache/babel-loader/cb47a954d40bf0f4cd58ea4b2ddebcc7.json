{"ast":null,"code":"import React, { Component } from 'react';\nexport default class Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counter: 0\n    };\n\n    this.addCounter = () => {\n      this.setState({\n        counter: this.state.counter + 1\n      });\n    };\n\n    this.minCounter = () => {\n      this.setState({\n        counter: this.state.counter - 1\n      });\n    };\n  }\n\n  render() {// использование зарезервированого название реактом <React.Flagment />\n\n    /* return (\n         <React.Fragment>\n             <h1 key='1'>Counter {this.state.counter}</h1>\n             <button key='2' onClick={this.addCounter}>+</button>\n             <button key='3' onClick={this.minCounter}>-</button>\n         </React.Fragment>\n     )*/\n    // Использование без блокового режима с помощью складывание элементов отрисовки JSX в масив\n\n    /*\n    return [\n            <h1 key='1'>Counter {this.state.counter}</h1>,\n            <button key='2' onClick={this.addCounter}>+</button>,\n            <button key='3'onClick={this.minCounter}>-</button>\n    ]\n    */\n  }\n\n}","map":{"version":3,"sources":["/Users/okhrimenkovladyslav/Desktop/IT/Testing/react-theory/src/Counter/Counter.js"],"names":["React","Component","Counter","state","counter","addCounter","setState","minCounter","render"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,eAAe,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC3CE,KAD2C,GACnC;AACJC,MAAAA,OAAO,EAAE;AADL,KADmC;;AAAA,SAK3CC,UAL2C,GAK9B,MAAM;AACf,WAAKC,QAAL,CAAc;AACVF,QAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAAX,GAAqB;AADpB,OAAd;AAGH,KAT0C;;AAAA,SAW3CG,UAX2C,GAW9B,MAAM;AACf,WAAKD,QAAL,CAAc;AACVF,QAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAAX,GAAqB;AADpB,OAAd;AAGH,KAf0C;AAAA;;AAkB3CI,EAAAA,MAAM,GAAG,CAEb;;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AAEA;;AACQ;AACR;AACA;AACA;AACA;AACA;AACA;AACK;;AArC0C","sourcesContent":["import React, {Component} from 'react'\n\nexport default class Counter extends Component {\n    state = {\n        counter: 0\n    }\n\n    addCounter = () => {\n        this.setState({\n            counter: this.state.counter + 1\n        })\n    }\n\n    minCounter = () => {\n        this.setState({\n            counter: this.state.counter - 1\n        })\n    }\n\n\n    render() {\n\n// использование зарезервированого название реактом <React.Flagment />\n       /* return (\n            <React.Fragment>\n                <h1 key='1'>Counter {this.state.counter}</h1>\n                <button key='2' onClick={this.addCounter}>+</button>\n                <button key='3' onClick={this.minCounter}>-</button>\n            </React.Fragment>\n        )*/\n\n// Использование без блокового режима с помощью складывание элементов отрисовки JSX в масив\n        /*\n        return [\n                <h1 key='1'>Counter {this.state.counter}</h1>,\n                <button key='2' onClick={this.addCounter}>+</button>,\n                <button key='3'onClick={this.minCounter}>-</button>\n        ]\n        */\n    }\n}"]},"metadata":{},"sourceType":"module"}