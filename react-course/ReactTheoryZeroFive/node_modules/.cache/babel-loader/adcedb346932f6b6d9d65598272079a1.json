{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/okhrimenkovladyslav/Desktop/IT/Testing/react-theory/src/App.js\";\nimport React, { Component } from \"react\";\nimport './App.css';\nimport Car from \"./Car/Car\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleCarsHandler = () => {\n      this.setState({\n        showCars: !this.state.showCars\n      });\n    };\n\n    this.handlerInput = event => {\n      this.setState({\n        pageTitle: event.target.value\n      });\n    };\n\n    this.onChangeName = (name, index) => {\n      const car = this.state.cars[index];\n      car.name = name;\n      const cars = [...this.state.cars];\n      this.setState({\n        cars\n      });\n    };\n\n    this.onDelete = index => {\n      // Метод concat() возвращает новый массив, состоящий из массива, на котором он был вызван\n      const cars = this.state.cars.concat();\n      cars.splice(index, 1);\n      this.setState({\n        cars\n      });\n    };\n\n    this.state = {\n      cars: [{\n        name: 'Ford',\n        year: 2018\n      }\n      /*{name: 'Audi', year: 2016},\n      {name: 'Mazda', year: 2010}*/\n      ],\n      pageTitle: 'React components',\n      showCars: false\n    };\n  }\n\n  componentWillMount() {\n    console.log('App run componentWillMount');\n  }\n\n  componentDidMount() {\n    console.log('App run componentDidMount');\n  }\n\n  render() {\n    console.log('App run Render');\n    const divStyle = {\n      textAlign: 'center'\n    };\n    let cars = null;\n\n    if (this.state.showCars) {\n      cars = this.state.cars.map((car, index) => {\n        return /*#__PURE__*/_jsxDEV(Car, {\n          name: car.name,\n          year: car.year,\n          onChangeName: event => {\n            this.onChangeName(event.target.value, index);\n          },\n          onDelete: () => {\n            this.onDelete(index);\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this);\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      style: divStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.state.pageTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: 'btnToggle',\n        onClick: () => {\n          this.toggleCarsHandler();\n        },\n        children: \"Toggle cars\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '400px',\n          margin: 'auto',\n          paddingTop: '20px'\n        },\n        children: cars\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/okhrimenkovladyslav/Desktop/IT/Testing/react-theory/src/App.js"],"names":["React","Component","Car","App","constructor","props","toggleCarsHandler","setState","showCars","state","handlerInput","event","pageTitle","target","value","onChangeName","name","index","car","cars","onDelete","concat","splice","year","componentWillMount","console","log","componentDidMount","render","divStyle","textAlign","map","width","margin","paddingTop"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport './App.css';\nimport Car from \"./Car/Car\";\n\nexport default class App extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            cars: [\n                {name: 'Ford', year: 2018},\n                /*{name: 'Audi', year: 2016},\n                {name: 'Mazda', year: 2010}*/\n            ],\n            pageTitle: 'React components',\n            showCars: false\n        }\n    }\n\n    toggleCarsHandler = () => {\n        this.setState({showCars: !this.state.showCars})\n    }\n\n    handlerInput = (event) => {\n        this.setState({pageTitle: event.target.value})\n    }\n\n    onChangeName = (name, index) => {\n        const car = this.state.cars[index]\n        car.name = name\n        const cars = [...this.state.cars]\n        this.setState({cars})\n    }\n\n    onDelete = (index) => {\n        // Метод concat() возвращает новый массив, состоящий из массива, на котором он был вызван\n        const cars = this.state.cars.concat()\n        cars.splice(index, 1)\n        this.setState({cars})\n    }\n\n    componentWillMount() {\n        console.log('App run componentWillMount')\n    }\n\n    componentDidMount() {\n        console.log('App run componentDidMount')\n    }\n\n    render() {\n        console.log('App run Render')\n        const divStyle = {\n            textAlign: 'center'\n        }\n        let cars = null\n        if (this.state.showCars) {\n\n            cars = this.state.cars.map((car, index) => {\n                return (\n                    <Car\n                        key={index}\n                        name={car.name}\n                        year={car.year}\n                        onChangeName={(event) => {\n                            this.onChangeName(event.target.value, index)\n                        }}\n                        onDelete={() => {\n                            this.onDelete(index)\n                        }}\n                    />\n                )\n            })\n        }\n\n        return (\n            <div className=\"App\" style={divStyle}>\n                <h1>{this.state.pageTitle}</h1>\n                <button className={'btnToggle'} onClick={() => {\n                    this.toggleCarsHandler()\n                }}>Toggle cars\n                </button>\n                <div style={{\n                    width: '400px',\n                    margin: 'auto',\n                    paddingTop: '20px'\n                }}>\n                    {cars}\n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}